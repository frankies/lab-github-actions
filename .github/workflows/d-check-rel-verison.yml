# name: Dispatch Check if internal or external version release
# run-name: 05-${{ github.actor }} Check if internal or external version release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version no'
        required: true
        default: 'v1.0.0'
        type: string
      prelease:
          description: 'Is prelease?'
          required: false
          default: false
          type: boolean                

jobs:
    check:
      name: Check if release with version and prelease flag
      runs-on: ubuntu-latest
      outputs:
        matched: ${{ steps.check-rel-flag.outputs.matched }}   
      steps:
        - run: echo "${{inputs.version}} ${{inputs.prelease}}"
        - name: Checking version ${{inputs.version}} if matching
          uses: actions-ecosystem/action-regex-match@v2
          id: match-rel-version
          with:
            text: ${{ inputs.version }}
            regex: '^v?[0-9]+(\.[0-9]+){0,2}(-[a-zA-Z]+[0-9]*)?$' 

        - run: echo "version match flag=${{steps.match-rel-version.outputs.match}}"

        #
        - id: check-rel-flag
          name: Check Release flag
          run: |
            if [[ !${{inputs.prelease}} && "${{steps.match-rel-version.outputs.match}}" != "" ]]; then
              echo "matched=true" >> $GITHUB_OUTPUT
              echo "### Release ###"
            else
              echo "matched=false" >> $GITHUB_OUTPUT 
              echo ">>>Not release<<<"
            fi
            cat $GITHUB_OUTPUT
    
    print_output_json:
      name: ${{github.actor}} shows output json
      runs-on: ubuntu-latest
      needs: check
      steps:
        - env:
            EVENT_CONTEXT: ${{ toJSON(needs.check) }}
          run: |
            echo $EVENT_CONTEXT  

    if_is_matched:
      runs-on: ubuntu-latest
      needs: check
      steps:
        - env:
            MATCH: ${{needs.check.outputs.matched}}
          run: echo "$MATCH ${{needs.check.outputs.matched}}"

    # deploy-to-external-repository:
    #   needs: check
    #   name: ðŸ“¢Deploy to external repository with release version
    #   runs-on: ubuntu-lastest
    #   if: ${{needs.check.outputs.matched}}
    #   steps:
    #      - run: echo "Publish to external with version ${{inputs.prelease}} - ${{needs.check.outputs.matched}}"

    # deploy-to-internal-repository:
    #   needs: check
    #   name: ðŸ¥½Deploy to internal repository with snapshot version
    #   runs-on: ubuntu-lastest
    #   if: ${{ ! needs.check.outputs.matched }}
    #   steps:
    #      - run: echo "Publish to internal with version ${{inputs.prelease}}"
